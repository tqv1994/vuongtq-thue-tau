<?php
define('CLASSES_DIR','classes');
define('HELPERS_DIR','helpers');
define('FORMS_DIR','forms');

require_once (CLASSES_DIR.'/BaseNode.class.php');
require_once (CLASSES_DIR.'/shipmanager.class.php');
require_once (CLASSES_DIR.'/ShipCustomer.class.php');
require_once (CLASSES_DIR.'/ShipOwner.class.php');
require_once (CLASSES_DIR.'/Ship.class.php');
require_once (CLASSES_DIR.'/ShipOrder.class.php');
require_once (CLASSES_DIR.'/ShipContract.class.php');

require_once(HELPERS_DIR.'/TaxonomyHelper.php');
require_once(HELPERS_DIR.'/GlobalHelper.php');
require_once(HELPERS_DIR.'/NodeHelper.php');

require_once(FORMS_DIR.'/BaseForm.php');
require_once(FORMS_DIR.'/CustomerForm.php');
require_once(FORMS_DIR.'/ShipOwnerForm.php');
require_once(FORMS_DIR.'/ShipForm.php');
require_once(FORMS_DIR.'/ShipOrderForm.php');
require_once(FORMS_DIR.'/ContractForm.php');

class_exists('Prometheus') && Prometheus::register(
  array(
    'DEFAULTS' => array(
      'template' => array(
        'ob_enable'      => TRUE,
        'load_as_region' => 'content'  // only load content to content area
      ),
    ),
    'ShipManager' => array(),
    'ShipCustomer' => array(
      'paths' =>array(
        'edit' => array(
          'view' => array(
            'json' => array()  // use json to pass values via ajax calls
          ),
        ),
        'create' => array(
          'view' => array(
            'json' => array()  // use json to pass values via ajax calls
          ),
        ),
        'delete' => array(
          'view' => array(
            'json' => array()  // use json to pass values via ajax calls
          ),
        )
      )
    ),
    'ShipOwner' => array(
      'paths' =>array(
        'edit' => array(
          'view' => array(
            'json' => array()  // use json to pass values via ajax calls
          ),
        ),
        'create' => array(
          'view' => array(
            'json' => array()  // use json to pass values via ajax calls
          ),
        ),
        'delete' => array(
          'view' => array(
            'json' => array()  // use json to pass values via ajax calls
          ),
        )
      )
    ),
    'Ship' => array(
      'paths' =>array(
        'edit' => array(
          'view' => array(
            'json' => array()  // use json to pass values via ajax calls
          ),
        ),
        'create' => array(
          'view' => array(
            'json' => array()  // use json to pass values via ajax calls
          ),
        ),
        'delete' => array(
          'view' => array(
            'json' => array()  // use json to pass values via ajax calls
          ),
        )
      )
    ),
    'ShipOrder' => array(
      'paths' =>array(
        'edit' => array(
          'view' => array(
            'json' => array()  // use json to pass values via ajax calls
          ),
        ),
        'create' => array(
          'view' => array(
            'json' => array()  // use json to pass values via ajax calls
          ),
        ),
        'delete' => array(
          'view' => array(
            'json' => array()  // use json to pass values via ajax calls
          ),
        )
      )
    ),
    'ShipContract' => array(
      'paths' =>array(
        'edit' => array(
          'view' => array(
            'json' => array()  // use json to pass values via ajax calls
          ),
        ),
        'create' => array(
          'view' => array(
            'json' => array()  // use json to pass values via ajax calls
          ),
        ),
        'delete' => array(
          'view' => array(
            'json' => array()  // use json to pass values via ajax calls
          ),
        )
      )
    ),
  )
);

/**
 * Implements hook_menu().
 */
function ship_menu() {
  $items = array();

  $items['customer-form'] = array(
    'title' => 'Customer form',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ship_customer_form'),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  $items['ship-owner-form'] = array(
    'title' => 'Ship owner form',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ship_owner_form'),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  $items['ship-form'] = array(
    'title' => 'Ship form',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ship_form'),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  $items['order-form'] = array(
    'title' => 'Order form',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ship_order_form'),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  $items['contract-form'] = array(
    'title' => 'Contract form',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ship_contract_form'),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}


function ship_customer_form($form, &$form_state) {
  // Add a textfield to the form.
  $customerForm = new CustomerForm();
  $form = $customerForm->form;

  return $form;
}

function ship_owner_form($form, &$form_state) {
  // Add a textfield to the form.
  $shipOwnerForm = new ShipOwnerForm();
  $form = $shipOwnerForm->form;

  return $form;
}

function ship_form($form, &$form_state) {
  // Add a textfield to the form.
  $shipForm = new ShipForm();
  $form = $shipForm->form;

  return $form;
}

function ship_order_form($form, &$form_state) {
  // Add a textfield to the form.
  $shipForm = new ShipOrderForm();
  $form = $shipForm->form;

  return $form;
}

function ship_contract_form($form, &$form_state) {
  // Add a textfield to the form.
  $shipContractForm = new ContractForm();
  $form = $shipContractForm->form;

  return $form;
}


function ship_form_alter(&$form, &$form_state, $form_id) {
  foreach (element_children($form) as $key){
    if($form[$key]['#type'] == 'textfield' || $form[$key]['#type'] == 'textarea') {
      $form[$key]['#attributes']['class'][] = "form-control";
    }else if($form[$key]['#type'] == 'select'){
      unset($form[$key]['#attributes']['class']['form-select']);
      $form[$key]['#attributes']['class'][] = 'form-select';
    }
  }
  if(strpos($form_id, 'views_exposed_form') !== FALSE) {
    $form["#prefix"] = "<div class='card'><h5 class='card-header'>".t("Filter")."</h5>";
    $form["#prefix"] .= "<div class='card-body'>";
    $form['#suffix'] = "</div></div></div>";
    foreach (element_children($form) as $key){
      if($form[$key]['#type'] == 'submit'){
        $form[$key]['#attributes']['class'][] = 'btn btn-success';
      }else{
//        $form[$key]['#attributes']['placeholder'] = $form[$key]['#title'];
//        $form[$key]['#title_display'] = 'after';
      }
    }
//    $form['#attached']['css'][] = drupal_get_path('module', 'mymodule') . '/css/my-custom-styles.css';
  }
  switch ($form_id){
    case 'ship_customer_form':
      $formModel = new CustomerForm();
      if(isset($_GET['id'])){
        $node = node_load($_GET['id']);
        $formModel->setFormValue($form,$node);
      }
      break;
    case 'ship_owner_form':
      $formModel = new ShipOwnerForm();
      if(isset($_GET['id'])){
        $node = node_load($_GET['id']);
        $formModel->setFormValue($form,$node);
      }
      break;
    case 'ship_form':
        $formModel = new ShipForm();
        if(isset($_GET['id'])){
          $node = node_load($_GET['id']);
          $formModel->setFormValue($form,$node);
        }
        break;
    case 'ship_order_form':
      $formModel = new ShipOrderForm();
      if(isset($_GET['id'])){
        $node = node_load($_GET['id']);
        $formModel->setFormValue($form,$node);
      }
      break;
    case 'ship_contract_form':
      $formModel = new ContractForm();
      if(isset($_GET['id'])){
        $node = node_load($_GET['id']);
        $formModel->setFormValue($form,$node);
      }
      break;
  }

}
